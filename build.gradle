buildscript {
	ext {
		springboot = '2.4.5'
		guava = '30.1.1-jre'
		curator = '5.1.0'
		mysql = '8.0.25'
		okhttp = '4.9.0'
		rxjava = '2.2.21'
		caffeine = '2.9.2'
		jackson_json = '2.12.4'
		shiro = '1.7.1'
		auth0 = '1.32.0'
		postgresql = '42.2.20'
		dubbo = '3.0.1'
	}

	repositories {
		mavenLocal()
		maven { url "https://maven.aliyun.com/repository/gradle-plugin" }
		mavenCentral()
		gradlePluginPortal()
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:$springboot"
	}
}

plugins {
	id 'idea'
	id 'java-platform'
	id 'org.springframework.boot' version "${springboot}"
}

allprojects {
	group = "$projectGroup"
	version = "$projectVersion"
}

subprojects {
	// 目前Gradle版本不支持在allprojects下声明plugins，使用的是旧的写法
	apply plugin: 'java'
	apply plugin: 'maven-publish'
	apply plugin: "org.springframework.boot"

	sourceCompatibility = '1.8'
	targetCompatibility = '1.8'

	repositories {
		mavenLocal()
		maven {
			allowInsecureProtocol = true
			url 'http://8.142.78.63:8081/repository/maven-snapshots/'
		}
		maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
		mavenCentral()
		gradlePluginPortal()
	}

	tasks.withType(JavaCompile) {
		//enable compilation in a separate daemon process
		options.fork = true
		options.encoding = 'UTF-8'
	}

	publishing {
		publications {
			// 推送
			publishMyProjectMiniexcel(MavenPublication) {
				// 编译jar包
				from components.java
				artifact bootJar
			}
		}
		// 到 https://oss.sonatype.org/#nexus-search; 搜索是否上传成功
		repositories {
			// 发布Release版本可在版本号后面带上'-RELEASE'，也可不带
			maven {
				name 'Release'
				allowInsecureProtocol true
				url 'http://8.142.78.63:8081/repository/maven-releases/'
				credentials {
					username = "${nexus_username}"
					password = "${nexus_password}"
				}
			}
			// 发布Snapshot快照版本必须在版本号后面加上'-SNAPSHOT'
			maven {
				name = 'Snapshot'
				allowInsecureProtocol true
				url = 'http://8.142.78.63:8081/repository/maven-snapshots/'
				credentials {
					username = "${nexus_username}"
					password = "${nexus_password}"
				}
			}
		}
	}


	test {
		useJUnitPlatform()
	}

	dependencies {
		implementation group: 'com.fasterxml.jackson.jaxrs', name: 'jackson-jaxrs-json-provider', version: "$jackson_json"
		implementation "com.google.guava:guava:$guava"
		implementation "org.apache.curator:curator-recipes:$curator"
		implementation "org.apache.curator:curator-framework:$curator"
		implementation "org.apache.curator:curator-client:$curator"
		implementation "mysql:mysql-connector-java:$mysql"
		implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: "$okhttp"
		implementation group: 'com.squareup.okhttp3', name: 'logging-interceptor', version: "$okhttp"
		implementation group: 'io.reactivex.rxjava2', name: 'rxjava', version: "$rxjava"
		implementation group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: "$caffeine"
		implementation group: 'org.apache.shiro', name: 'shiro-spring-boot-web-starter', version: "$shiro"
		implementation group: 'com.auth0', name: 'auth0', version: "$auth0"
		implementation group: 'org.postgresql', name: 'postgresql', version: "$postgresql"
		implementation "org.springframework.boot:spring-boot-starter-test:$springboot"
		implementation group: 'com.squareup.okhttp3', name: 'mockwebserver', version: "$okhttp"
		implementation group: 'org.apache.dubbo', name: 'dubbo-spring-boot-starter', version: "$dubbo"
		implementation group: 'org.apache.dubbo', name: 'dubbo-dependencies-zookeeper', version: "$dubbo"
	}
}
javaPlatform {
	allowDependencies()
}

dependencies {
	api platform("org.springframework.boot:spring-boot-dependencies:${springboot}")
}


