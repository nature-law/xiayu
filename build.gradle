apply from: './version.gradle'

buildscript {
	repositories {
		mavenLocal()
		maven { url "https://maven.aliyun.com/repository/gradle-plugin" }
		mavenCentral()
		gradlePluginPortal()
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springboot}"
	}
}


allprojects {
	apply plugin: 'java'
	apply plugin: 'idea'
	apply plugin: 'maven-publish'
	apply plugin: "org.springframework.boot"
	group = "$projectGroup"
	version = "$projectVersion"
	sourceCompatibility = '1.8'
	targetCompatibility = '1.8'

	repositories {
		mavenLocal()
		maven {
			allowInsecureProtocol = true
			url 'http://8.142.78.63:8081/repository/maven-snapshots/'
		}
		maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
		mavenCentral()
		gradlePluginPortal()
	}

	dependencies {
		testImplementation "org.springframework.boot:spring-boot-starter-test:$rootProject.ext.version.springboot"
	}

	tasks.withType(JavaCompile) {
		//enable compilation in a separate daemon process
		options.fork = true
		options.encoding = 'UTF-8'
	}

	apply plugin: 'maven-publish'

	publishing {
		publications {
			// 推送
			publishMyProjectMiniexcel(MavenPublication) {
				// 编译jar包
				from components.java
				artifact bootJar
			}
		}
		// 到 https://oss.sonatype.org/#nexus-search; 搜索是否上传成功
		repositories {
			// 发布Release版本可在版本号后面带上'-RELEASE'，也可不带
			maven {
				name 'Release'
				allowInsecureProtocol true
				url 'http://8.142.78.63:8081/repository/maven-releases/'
				credentials {
					username = "${nexus_username}"
					password = "${nexus_password}"
				}
			}
			// 发布Snapshot快照版本必须在版本号后面加上'-SNAPSHOT'
			maven {
				name = 'Snapshot'
				allowInsecureProtocol true
				url = 'http://8.142.78.63:8081/repository/maven-snapshots/'
				credentials {
					username = "${nexus_username}"
					password = "${nexus_password}"
				}
			}
		}
	}

}


subprojects {
	dependencies {
		implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: "$rootProject.ext.version.springboot"
		implementation "org.springframework.boot:spring-boot-starter-aop:$rootProject.ext.version.springboot"
		implementation "org.springframework.boot:spring-boot-starter-data-jpa:$rootProject.ext.version.springboot"
		implementation "org.springframework.boot:spring-boot-devtools:$rootProject.ext.version.springboot"
		implementation group: 'com.fasterxml.jackson.jaxrs', name: 'jackson-jaxrs-json-provider', version: "$rootProject.ext.version.jackson_json"
		implementation "com.google.guava:guava:$rootProject.ext.version.guava"
		implementation "org.apache.curator:curator-recipes:$rootProject.ext.version.curator"
		implementation "org.apache.curator:curator-framework:$rootProject.ext.version.curator"
		implementation "org.apache.curator:curator-client:$rootProject.ext.version.curator"
		implementation "mysql:mysql-connector-java:$rootProject.ext.version.mysql"
		implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: "$rootProject.ext.version.okhttp"
		implementation group: 'com.squareup.okhttp3', name: 'logging-interceptor', version: "$rootProject.ext.version.okhttp"
		implementation group: 'io.reactivex.rxjava2', name: 'rxjava', version: "$rootProject.ext.version.rxjava"
		implementation group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: "$rootProject.ext.version.caffeine"
		implementation group: 'org.apache.shiro', name: 'shiro-spring-boot-web-starter', version: "$rootProject.ext.version.shiro"
		implementation group: 'com.auth0', name: 'auth0', version: "$rootProject.ext.version.auth0"
		implementation group: 'org.postgresql', name: 'postgresql', version: "$rootProject.ext.version.postgresql"
		testImplementation "org.springframework.boot:spring-boot-starter-test:$rootProject.ext.version.springboot"
		testImplementation group: 'com.squareup.okhttp3', name: 'mockwebserver', version: "$rootProject.ext.version.okhttp"
	}
	test {
		useJUnitPlatform()
	}
}
